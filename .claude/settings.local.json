{
  "permissions": {
    "allow": [
      "Bash(rm:*)",
      "Bash(pnpm run:*)",
      "Bash(timeout:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(mv:*)",
      "Bash(git push:*)",
      "Bash(git config:*)",
      "Bash(ls:*)",
      "Bash(ssh-keygen:*)",
      "Bash(cat:*)",
      "Bash(git remote set-url:*)",
      "Bash(ssh:*)",
      "Bash(git checkout:*)",
      "Bash(pnpm install:*)",
      "Bash(mkdir:*)",
      "Bash(find:*)",
      "Bash(cp:*)",
      "Bash(chmod:*)",
      "Bash(rg:*)",
      "Bash(sed:*)",
      "Bash(npx tsc:*)",
      "Bash(npm run type-check:*)",
      "Bash(npm run:*)",
      "Bash(grep:*)",
      "Bash(npx next:*)",
      "Bash(npm install)",
      "Bash(npm install:*)",
      "Bash(NEXT_CONFIG_FILE=next.config.static.mjs npx next build)",
      "Bash(NEXT_CONFIG_FILE=next.config.static.mjs ./node_modules/.bin/next build)",
      "Bash(NEXT_CONFIG_FILE=next.config.static.mjs NODE_ENV=production npm run build)",
      "Bash(NEXT_CONFIG_FILE=next.config.static.mjs NODE_ENV=production node_modules/.bin/next build)",
      "Bash(NEXT_CONFIG_FILE=next.config.static.mjs npx --yes next@14.2.14 build)",
      "Bash(NEXT_CONFIG_FILE=next.config.test.mjs npx --yes next@14.2.14 build)",
      "Bash(npm cache clean:*)",
      "Bash(NEXT_CONFIG_FILE=next.config.test.mjs npx next build)",
      "Bash(NEXT_CONFIG_FILE=next.config.test.mjs npx next export)",
      "Bash(git rm:*)",
      "Bash(NEXT_CONFIG_FILE=next.config.static.mjs npm run build)",
      "Bash(wrangler deploy:*)",
      "Bash(npx wrangler deploy:*)",
      "Bash(export CLOUDFLARE_API_TOKEN=\"VJ0kTluXJbJ5eCIbT7o2h6iAGiZ9heIgthxxeMXZ\")",
      "Bash(npx wrangler:*)",
      "Bash(CLOUDFLARE_API_TOKEN=\"VJ0kTluXJbJ5eCIbT7o2h6iAGiZ9heIgthxxeMXZ\" npx wrangler whoami)",
      "Bash(CLOUDFLARE_API_TOKEN=\"VJ0kTluXJbJ5eCIbT7o2h6iAGiZ9heIgthxxeMXZ\" npx wrangler deploy --config wrangler.workers.toml)",
      "Bash(CLOUDFLARE_API_TOKEN=\"mF5SIiVQuqJV5mrZCj3A9nTZOYhfo6mmHx8ieaxW\" npx wrangler whoami)",
      "Bash(CLOUDFLARE_API_TOKEN=\"mF5SIiVQuqJV5mrZCj3A9nTZOYhfo6mmHx8ieaxW\" npx wrangler deploy --config wrangler.workers.toml)",
      "Bash(curl:*)",
      "Bash(CLOUDFLARE_API_TOKEN=\"mF5SIiVQuqJV5mrZCj3A9nTZOYhfo6mmHx8ieaxW\" npx wrangler pages deploy out --project-name aimagica-pages)",
      "Bash(CLOUDFLARE_API_TOKEN=\"mF5SIiVQuqJV5mrZCj3A9nTZOYhfo6mmHx8ieaxW\" npx wrangler pages project list)",
      "Bash(CLOUDFLARE_API_TOKEN=\"mF5SIiVQuqJV5mrZCj3A9nTZOYhfo6mmHx8ieaxW\" npx wrangler pages deploy out --project-name aimagica --commit-dirty=true)",
      "Bash(CLOUDFLARE_API_TOKEN=mF5SIiVQuqJV5mrZCj3A9nTZOYhfo6mmHx8ieaxW npx wrangler deploy --config wrangler.workers.toml)",
      "Bash(CLOUDFLARE_API_TOKEN=mF5SIiVQuqJV5mrZCj3A9nTZOYhfo6mmHx8ieaxW npx wrangler secret put SUPABASE_URL --env production)",
      "Bash(CLOUDFLARE_API_TOKEN=mF5SIiVQuqJV5mrZCj3A9nTZOYhfo6mmHx8ieaxW npx wrangler pages deploy out --project-name aimagica)",
      "Bash(export CLOUDFLARE_API_TOKEN=\"mF5SIiVQuqJV5mrZCj3A9nTZOYhfo6mmHx8ieaxW\")",
      "WebFetch(domain:e65f989d.aimagica.pages.dev)",
      "Bash(CLOUDFLARE_API_TOKEN=$CF_API_TOKEN npx wrangler pages deploy out --project-name aimagica)",
      "Bash(wrangler whoami:*)",
      "WebFetch(domain:5dd36f8a.aimagica.pages.dev)",
      "Bash(cross-env NEXT_CONFIG_FILE=next.config.static.mjs npm run build)",
      "Bash(true)",
      "Bash(pkill:*)",
      "Bash(npm ls:*)",
      "WebFetch(domain:aimagica.pages.dev)",
      "Bash(wrangler pages project:*)",
      "Bash(tar:*)",
      "WebFetch(domain:abaf5aef.aimagica.pages.dev)",
      "Bash(node:*)"
    ],
    "deny": []
  }
}